1 МЕТА РОБОТИ

Мета роботи полягає в розробці серверної частини проєкту з урахуванням прийнятих інженерних рішень. Процес включає створення загальної структури системи, побудову серверних компонентів та розробку структури бази даних. 

2 КОНЦЕПТУАЛЬНЕ МОДЕЛЮВАННЯ ПРЕДМЕТНОЇ ОБЛАСТІ

2.1 Створення діаграми розгортання

Для лабораторної роботи було розроблено UML діаграму розгортання. ЇЇ наведено на рисунку 1.1

Центральний сервер Цей сервер є центральним вузлом системи. На ньому розміщується серверне програмне забезпечення для обробки даних від транспортних засобів, управління операціями та зберігання інформації про маршрути, дорожні листи і т.д.
База даних Сервер баз даних містить сховище для всіх даних, зібраних від транспортних засобів. Це можуть бути дані про місцезнаходження, швидкість, стан та інші параметри, необхідні для відстеження та аналізу.
Транспортні засоби Це клієнтські пристрої, такі як GPS-трекери або пристрої стеження, встановлені на транспортних засобах (автомобілях, вантажівках тощо). Вони надсилають дані про місцезнаходження та інші параметри на центральний сервер через мережу (наприклад, стільникову мережу).
Адміністративні клієнти: Це пристрої або програми, які використовуються адміністраторами системи для моніторингу та керування. Вони можуть підключатися до центрального сервера через мережу Інтернет для перегляду даних, створення звітів, налаштування параметрів системи тощо.
Мобільні клієнти: Це мобільні програми, встановлені на смартфонах або планшетах, які можуть використовуватися для відстеження транспортних засобів та отримання повідомлень про статус. Вони можуть також підключатися до центрального сервера через Інтернет.
Взаємодія між транспортними засобами та центральним сервером відбувається через мережу передачі даних, таку як стільникова мережа або Інтернет, а адміністративні та мобільні клієнти підключаються до центрального сервера через мережу Інтернет.

2.2 Створення діаграми прецедентів

	Наступним чином для даної лабораторної роботи було розроблено UML діаграму прецедентів. Дану діаграму відображено на рисунку 1.2.

 У клієнта є можливістб управління налаштуваннями ситеми, перегляду поточного місцезнаходження транспортних засобів, отримання повідомлень про події та генерації звітів про діяльність транспортних засобів
Програмна система тримає всі ці функції в собі, а також відстежує маршрути транспортних засобів та оновлює дані для користувачача.

2.3 Створення схеми бази даних

	Наступний шлях – це розробка бази даних. Для створення бази даних було розроблено схему бази даних. Схему баз даних відображено на рисунку 1.3.

	Таблиця Routes має в собі інформацію про маршрути переміщення транспортних засобів. Стартову точку, кінцеву точку, дистанцію та розрахунковий час.
	Таблиця Users має в собі інформацію про користувачів програмної системи. Має такі поля: логін (потрібен для входу в акаунт), пароль, пошта та тип користувача (або клієнт, або адміністратор).
	Таблиця Drivers має в собі інформацію про водіїв. Має такі поля: ПІБ, дата народження, номер водійського посвідчення, термін придатності водійського посвідчення та номер телефону.
	Таблиця Vehicles має в собі інформцію про автомобілі корпорацій. Має такі поля: номер авто, тип авто, марка, модель, рік випуску авто, вага авто з заводу, поточна вага авто, місцезнаходження, об'єм паливного баку, поточний процент заповнення паливного баку та водія, що користується цим авто.
	Таблиця Transportations – таблиця, що має інформацію про кожне перевезення. Має такі поля: початок перевезення за часом, кінцевий час, опис вантажу, вага вантажу, певний шлях, певного водія та певне авто.

3 ІНЖЕНЕРНІ РІШЕННЯ 

	Таблиця 1.1 – Специфікація проєкту
|----------------------------------------------------------------------------------------------------------------------------
| Сутність            | Метод | Посилання                                  | Дія                                            |
|---------------------|-------|--------------------------------------------|------------------------------------------------|
| User                | POST  | /api/Users/register                        | Реєстрація користувача в системі               |
|                     | POST  | /api/Users/login                           | Вхід в систему                                 |
|                     | GET   | /api/Users/{id}                            | Отримання конкретного користувача              |
| Driver              | POST  | /api/Drivers                               | Додавання водія в систему                      |
|                     | DELETE| /api/Drivers/{id}                          | Видалення водія з системи                      |
|                     | PUT   | /api/Drivers/{id}                          | Оновлення даних про водія                      |
|                     | GET   | /api/Drivers/{id}                          | Отримання інформації про конкретного водія     |
|                     | GET   | /api/Drivers                               | Отримати список всіх водіїв                    |
| Vehicles            | GET   | /api/Vehicles/{id}                         | Отримання інформації про конкретне авто        |
|                     | PUT   | /api/Vehicles/{id}                         | Оновлення інформації про авто                  |
|                     | DELETE| /api/Vehicles/{id}                         | Видалення авто                                 |
|                     | POST  | /api/Vehicles                              | Створення нового авто                          |
|                     | GET   | /api/Vehicles                              | Отримання всіх авто в системі                  |
| Routes              | GET   | /api/Routes/{id}                           | Отримання конкретного маршруту                 |
|                     | POST  | /api/Routes                                | Додавання маршруту в систему                   |
|                     | DELETE| /api/Routes/{id}                           | Видалення маршруту                             |
|                     | GET   | /api/Routes                                | Отримання всіх маршрутів                       |
|                     | PUT   | /api/Routes/{id}                           | Оновлення інформації про маршрут               |
| Transportations     | GET   | /api/Transportations                       | Отримання всіх перевезень                      |
|                     | POST  | /api/Transportations                       | Додати нове перевезення                        |
|                     | GET   | /api/Transportations/{id}                  | Отримання конкретного перевезення              |
|                     | DELETE| /api/Transportations/{id}                  | Видалення перевезення                          |
-----------------------------------------------------------------------------------------------------------------------------

4 ВИСНОВКИ

Під час виконання завдання була створена серверна частина програмної системи, а також складено відповідний звіт. У звіті міститься детальний опис використаних інженерних рішень, а також надані посилання на вихідний код проекту.
 

5 ПЕРЕЛІК ДЖЕРЕЛ ПОСИЛАННЯ 

Посилання на архів з кодом: https://github.com/NureRozovArtem/apz-pzpi-21-6-rozov-artem/tree/main/Task2/VehiclesTrackingSystem
Посилання на відео: https://youtu.be/jv87433tT24
